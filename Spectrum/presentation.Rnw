\documentclass{article}

\begin{document}

<<eval=TRUE, message=F, warning=F, echo=T>>=
#install.packages("Matching", dependencies=TRUE)
#install.packages("rgenoud")
setwd("C:/Users/Darin/Documents/sanctionsbackslide/Spectrum")
library(Matching)
library(rgenoud)
library(dplyr)
library(stargazer)
library(readr)

df <- read_csv("SanctionsFinal.csv") %>% 
  mutate(pop1 = log(pop1)) %>% 
  filter(!is.na(GDP_UN)) %>% 
  mutate(deliniation = ifelse(polity2 >= 6, 1, ifelse(polity2 >= 2 & polity2 < 6, 2, ifelse(polity2 < 2 & polity2 > -2, 3, ifelse(polity2 <= -2 & polity2 >= -5, 4, ifelse(polity2 <= -6, 5, NA)))))) 

df$murban[df$murban < 0] <- 0

dsum <- as.data.frame(select(df, polity2, sanctions, GDP_UN, pop1, menergy, mindustry, murban, dpolityb)) 

dt <-  df %>%
  group_by(sanctions) %>% 
  summarise(polity2 = mean(polity2))
dt <- as.data.frame(dt)
@

<<summary, results='asis'>>=
stargazer(dsum, title = "Summary Statistics")
stargazer(dt, summary = F, title = "Average Score of Democracy: Sanctioned vs Non-Sanctioned", rownames = F)
@

<<>>=
X <- select(df, GDP_UN, pop1, menergy, mindustry, murban)

BalanceMatrix <- cbind(df$GDP_UN, df$pop1, df$menergy, df$mindustry, df$murban, I(df$GDP_UN*df$pop1), I(df$GDP_UN*df$menergy),
                        I(df$GDP_UN*df$mindustry), I(df$GDP_UN*df$murban), I(df$pop1*df$murban), I(df$murban*df$mindustry),I(df$pop1*df$mindustry))

gen1 <- GenMatch(Tr = df$sanctions, X = X, BalanceMatrix = BalanceMatrix, pop.size = 10, print.level = 0, unif.seed=3392, int.seed=8282)

mgen1 <- Match(Y = df$polity2, Tr = df$sanctions, X = X, Weight.matrix = gen1)
print(summary(mgen1))
@

<<>>=
qqplot(df$GDP_UN[mgen1$index.treated], df$GDP_UN[mgen1$index.control],
                 xlab = "Treated", ylab = "Control", main = "QQ Plot of Distribution of GDP")

qqplot(df$pop1[mgen1$index.treated], df$pop1[mgen1$index.control],
                 xlab = "Treated", ylab = "Control", main = "QQ Plot of Distribution of GDP")

qqplot(df$menergy[mgen1$index.treated], df$menergy[mgen1$index.control],
                 xlab = "Treated", ylab = "Control", main = "QQ Plot of Distribution of GDP")

qqplot(df$mindustry[mgen1$index.treated], df$mindustry[mgen1$index.control],
                 xlab = "Treated", ylab = "Control", main = "QQ Plot of Distribution of GDP")

qqplot(df$murban[mgen1$index.treated], df$murban[mgen1$index.control],
                 xlab = "Treated", ylab = "Control", main = "QQ Plot of Distribution of GDP")
@

<<overall, results='asis'>>=
stargazer(mgen1, title = "Summary Statistics")

@

<<>>=
library(ggplot2)
library(scales)

dp <- df %>% 
  group_by(Year, polity2) %>% 
  filter(!is.na(dpolityb)) %>% 
  count(dpolityb, polity2) %>% 
  group_by(polity2) %>% 
  mutate(Pdpolity = n/sum(n)) %>% 
  filter(dpolityb == 1) %>% 
  select(polity2, Pdpolity)

ggplot(dp, aes(x = polity2, y = Pdpolity)) +
  geom_bar(stat="identity") +
  xlab("Polity Score") +
  ylab("Probability of Change in Polity Score") +
  ggtitle("Distribution of Probability of Change in Polity Score") +
  scale_y_continuous(labels=percent)

k1 <- select(df, polity2, Pdpolity)
set.seed(2)
fit1 <- kmeans(k1, 5)
aggregate(k1,by=list(fit1$cluster),FUN=mean) %>% 
  arrange(-polity2) 
  

k1 <- data.frame(k1, fit1$cluster) %>% 
  mutate(fit1.cluster = plyr::mapvalues(fit1.cluster, from = c(3, 1, 4, 5, 2), to = c(1, 2, 3, 4, 5))) %>% 
    select(cluster = fit1.cluster) 

df <- cbind(df, k1) 
@

<<>>=
#Highest (cluster == 1) level 
d1 <- filter(df, cluster == 1)

X <- select(d1, GDP_UN, pop1, menergy, mindustry, murban) 

BalanceMatrix <- cbind(d1$GDP_UN, d1$pop1, d1$menergy, d1$mindustry, d1$murban, I(d1$GDP_UN*d1$pop1), I(d1$GDP_UN*d1$menergy),
                        I(d1$GDP_UN*d1$mindustry), I(d1$GDP_UN*d1$murban), I(d1$pop1*d1$murban), I(d1$murban*d1$mindustry),I(d1$pop1*d1$mindustry))

gen1 <- GenMatch(Tr = d1$sanctions, X = X, BalanceMatrix = BalanceMatrix, pop.size = 10, print.level = 0, unif.seed=3392, int.seed=8282)

mgen1 <- Match(Y = d1$polity2, Tr = d1$sanctions, X = X, Weight.matrix = gen1)
print(summary(mgen1))
@

<<>>=
#Second Highest (cluster == 2) level 
d1 <- filter(df, cluster == 2)

X <- select(d1, GDP_UN, pop1, menergy, mindustry, murban) 

BalanceMatrix <- cbind(d1$GDP_UN, d1$pop1, d1$menergy, d1$mindustry, d1$murban, I(d1$GDP_UN*d1$pop1), I(d1$GDP_UN*d1$menergy),
                        I(d1$GDP_UN*d1$mindustry), I(d1$GDP_UN*d1$murban), I(d1$pop1*d1$murban), I(d1$murban*d1$mindustry),I(d1$pop1*d1$mindustry))

gen1 <- GenMatch(Tr = d1$sanctions, X = X, BalanceMatrix = BalanceMatrix, pop.size = 10, print.level = 0, unif.seed=3392, int.seed=8282)

mgen1 <- Match(Y = d1$polity2, Tr = d1$sanctions, X = X, Weight.matrix = gen1)
print(summary(mgen1))
@

<<>>=
#Mid Levels (cluster == 3) level 
d1 <- filter(df, cluster == 3)

X <- select(d1, GDP_UN, pop1, menergy, mindustry, murban) 

BalanceMatrix <- cbind(d1$GDP_UN, d1$pop1, d1$menergy, d1$mindustry, d1$murban, I(d1$GDP_UN*d1$pop1), I(d1$GDP_UN*d1$menergy),
                        I(d1$GDP_UN*d1$mindustry), I(d1$GDP_UN*d1$murban), I(d1$pop1*d1$murban), I(d1$murban*d1$mindustry),I(d1$pop1*d1$mindustry))

gen1 <- GenMatch(Tr = d1$sanctions, X = X, BalanceMatrix = BalanceMatrix, pop.size = 10, print.level = 0, unif.seed=3392, int.seed=8282)

mgen1 <- Match(Y = d1$polity2, Tr = d1$sanctions, X = X, Weight.matrix = gen1)
print(summary(mgen1))
@

<<>>=
#Second Lowest Levels (cluster == 4) level 
d1 <- filter(df, cluster == 4)

X <- select(d1, GDP_UN, pop1, menergy, mindustry, murban) 

BalanceMatrix <- cbind(d1$GDP_UN, d1$pop1, d1$menergy, d1$mindustry, d1$murban, I(d1$GDP_UN*d1$pop1), I(d1$GDP_UN*d1$menergy),
                        I(d1$GDP_UN*d1$mindustry), I(d1$GDP_UN*d1$murban), I(d1$pop1*d1$murban), I(d1$murban*d1$mindustry),I(d1$pop1*d1$mindustry))

gen1 <- GenMatch(Tr = d1$sanctions, X = X, BalanceMatrix = BalanceMatrix, pop.size = 10, print.level = 0, unif.seed=3392, int.seed=8282)

mgen1 <- Match(Y = d1$polity2, Tr = d1$sanctions, X = X, Weight.matrix = gen1)
print(summary(mgen1))
@

<<>>=
#Lowest Levels (cluster == 5) level 
d1 <- filter(df, cluster == 5)

X <- select(d1, GDP_UN, pop1, menergy, mindustry, murban) 

BalanceMatrix <- cbind(d1$GDP_UN, d1$pop1, d1$menergy, d1$mindustry, d1$murban, I(d1$GDP_UN*d1$pop1), I(d1$GDP_UN*d1$menergy),
                        I(d1$GDP_UN*d1$mindustry), I(d1$GDP_UN*d1$murban), I(d1$pop1*d1$murban), I(d1$murban*d1$mindustry),I(d1$pop1*d1$mindustry))

gen1 <- GenMatch(Tr = d1$sanctions, X = X, BalanceMatrix = BalanceMatrix, pop.size = 10, print.level = 0, unif.seed=3392, int.seed=8282)

mgen1 <- Match(Y = d1$polity2, Tr = d1$sanctions, X = X, Weight.matrix = gen1)
print(summary(mgen1))
@
\end{document}